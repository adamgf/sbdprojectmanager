{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["targetPeopleIDs","onSelectThumbnail","this","props","item","isSelected","personIDToBeRemoved","tags","value","index","indexOf","splice","alert","caption","personIDToAdd","push","JSON","stringify","App","componentDidMount","a","updatePeopleState","peopleList","peopleThumbnails","existingpeople","state","people","existingthumbnails","peoplethumbnails","length","newpeople","concat","newimagethumbnails","setState","updateProjectState","projectsList","projects","OAuth","initialize","popup","done","result","console","log","me","data","userId","id","accounts","raw","i","name","getFunc","theResult","peoplepage","get","peoplelist","ids","thumbnailImages","person","representationalImage","src","avatar_url","thumbnail","thumbnailWidth","thumbnailHeight","title","fail","err","projectslist","className","images","onClickThumbnail","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAAe,I,qCCMXA,EAAkB,GAEtB,SAASC,IACP,GAAKC,KAAKC,MAAMC,KAAKC,WAMhB,CACH,IAAMC,EAAsBJ,KAAKC,MAAMC,KAAKG,KAAK,GAAGC,MAC9CC,EAAQT,EAAgBU,QAAQJ,IACvB,IAAXG,GACFT,EAAgBW,OAAOF,EAAO,GAEhCG,MAAMV,KAAKC,MAAMC,KAAKS,QAAU,sBAChCX,KAAKC,MAAMC,KAAKC,YAAa,MAbE,CAC/B,IAAMS,EAAgBZ,KAAKC,MAAMC,KAAKG,KAAK,GAAGC,MAC9CR,EAAgBe,KAAKD,GACrBF,MAAMV,KAAKC,MAAMC,KAAKS,QAAU,oBAChCX,KAAKC,MAAMC,KAAKC,YAAa,EAW/BO,MAAM,oBAAsBI,KAAKC,UAAUjB,I,IAGvCkB,E,kDAEJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAQRgB,kBATmB,sBASC,8BAAAC,EAAA,sDAEZC,EAAoB,SAACC,EAAYC,GAErC,IAAIC,EAAiB,EAAKC,MAAMC,OAC5BC,EAAqB,EAAKF,MAAMG,iBACpC,GAAIN,GAAcA,EAAWO,OAAS,EAAG,CAEvC,IAAMC,EAAYN,EAAeO,OAAOT,GAClCU,EAAqBL,EAAmBI,OAAOR,GACrDX,MAAM,uBAAyBkB,EAAUD,QACzC,EAAKI,SAAS,CAAEP,OAASI,EAAWF,iBAAmBI,MAIrDE,EAAqB,SAACC,GAE1B,EAAKF,SAAS,CAAEG,SAAWD,KAG7BE,QAAMC,WAAW,+BACjBD,QAAME,MAAM,YAAYC,MAAK,SAASC,GACpCC,QAAQC,IAAI3B,KAAKC,UAAUwB,IAI3BA,EAAOG,KAAKJ,MAAK,SAASK,GAIxB,IAFA,IAAIC,EAASD,EAAKE,GACdC,EAAWH,EAAKI,IAAID,SACfE,EAAE,EAAEA,EAAIF,EAASnB,OAAOqB,IAC/B,GAAyB,2BAArBF,EAASE,GAAGC,KAAmC,CACjDL,EAASE,EAASE,GAAGH,GACrB,MAIJ,IAAMK,EAAO,uCAAG,WAAMC,EAAWC,GAAjB,SAAAlC,EAAA,sDACdiC,EAAUE,IAAV,oCAA2CT,EAA3C,6BAAsEQ,IACrEd,MAAK,SAASgB,GACb,IADyB,EACrBC,EAAM,GACNC,EAAkB,GAFG,cAGJF,GAHI,IAGzB,2BAAiC,CAAC,IAAvBG,EAAsB,QAC/BF,EAAI1C,KAAK4C,EAAOZ,IAChB,IAAMa,EAAwB,CAC5BC,IAAKF,EAAOG,WACZC,UAAWJ,EAAOG,WAClBE,eAAgB,GAChBC,gBAAiB,GACjB5D,YAAY,EACZQ,QAAS8C,EAAOR,KAChB5C,KAAM,CAAC,CAAEC,MAAOmD,EAAOZ,GAAImB,MAAOP,EAAOR,QAE3CO,EAAgB3C,KAAK6C,IAdE,8BAgBN,IAAfH,EAAI5B,OACNjB,MAAM,sCAAwC0C,EAAa,OAG3DjC,EAAkBoC,EAAKC,GACvBN,EAAQX,EAAQa,EAAa,OAGhCa,MAAK,SAASC,GACbxD,MAAM,mCAAqCwD,MA3B/B,2CAAH,wDA+BbhB,EAAQX,EAAQ,GAwChBA,EAAOc,IAAP,oCAAwCT,EAAxC,mBAAgEN,MAAK,SAAS6B,GAC5E3B,QAAQC,IAAI,oBAAsB3B,KAAKC,UAAUoD,IACjDnC,EAAmBlB,KAAKC,UAAUoD,aA9GtB,2CAPlB,EAAK5C,MAAQ,CACXC,OAAS,GACTE,iBAAmB,GACnBQ,SAAW,IALI,E,0CA8InB,WACE,OACA,qBAAKkC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,8CAEE,8BACE,cAAC,IAAD,CAASC,OAAQrE,KAAKuB,MAAMG,iBAAkB4C,iBAAkBvE,SAGpE,yD,GA1JUwE,IAAMC,WAmKTxD,IClLAyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.49711082.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { OAuth } from 'oauthio-web';\nimport Gallery from 'react-grid-gallery';\n\nvar targetPeopleIDs = []\n\nfunction onSelectThumbnail() {\n  if (!this.props.item.isSelected) {\n    const personIDToAdd = this.props.item.tags[0].value\n    targetPeopleIDs.push(personIDToAdd)\n    alert(this.props.item.caption + ' has been added!')\n    this.props.item.isSelected = true\n  }\n  else {\n    const personIDToBeRemoved = this.props.item.tags[0].value\n    const index = targetPeopleIDs.indexOf(personIDToBeRemoved)\n    if (index !== -1) {\n      targetPeopleIDs.splice(index, 1); \n    }\n    alert(this.props.item.caption + ' has been removed!')\n    this.props.item.isSelected = false\n  }\n  alert('Current IDs are: ' + JSON.stringify(targetPeopleIDs))\n}\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      people : [],\n      peoplethumbnails : [],\n      projects : \"\"    \n    }\n  }\n\n  componentDidMount = async() => {\n\n    const updatePeopleState = (peopleList, peopleThumbnails) => {\n      //alert('people: ' + peopleList)\n      var existingpeople = this.state.people\n      var existingthumbnails = this.state.peoplethumbnails\n      if (peopleList && peopleList.length > 0) {\n        \n        const newpeople = existingpeople.concat(peopleList) \n        const newimagethumbnails = existingthumbnails.concat(peopleThumbnails)\n        alert('Total people count: ' + newpeople.length)\n        this.setState({ people : newpeople, peoplethumbnails : newimagethumbnails })\n      }\n    }\n    \n    const updateProjectState = (projectsList) => {\n      //alert('projects: ' + projectsList)\n      this.setState({ projects : projectsList})\n    }\n\n    OAuth.initialize('_kPudQPY3u7LLbJwnCHnB8v8y5M')\n    OAuth.popup('basecamp').done(function(result) {\n      console.log(JSON.stringify(result))\n      // do some stuff with result\n\n\n      result.me().done(function(data) {\n        // do something with `data`, e.g. print data.name\n        var userId = data.id \n        let accounts = data.raw.accounts\n        for (var i=0;i < accounts.length;i++) {\n          if (accounts[i].name === \"Stanley Black & Decker\") {\n            userId = accounts[i].id\n            break\n          }\n        }\n\n        const getFunc = async(theResult, peoplepage) => {\n          theResult.get(`https://3.basecampapi.com/${userId}/people.json?page=${peoplepage}`)\n          .done(function(peoplelist) {\n            var ids = []\n            var thumbnailImages = []\n            for (const person of peoplelist) {\n              ids.push(person.id)\n              const representationalImage = {\n                src: person.avatar_url,\n                thumbnail: person.avatar_url,\n                thumbnailWidth: 64,\n                thumbnailHeight: 64,\n                isSelected: false,\n                caption: person.name,\n                tags: [{ value: person.id, title: person.name }]\n              }\n              thumbnailImages.push(representationalImage)\n            }\n            if (ids.length === 0) {\n              alert('Got zero length of people for page ' + peoplepage + '!!')\n            }\n            else {\n              updatePeopleState(ids, thumbnailImages)\n              getFunc(result, peoplepage + 1)\n            }\n          })\n          .fail(function(err) {\n            alert('Failure condition was triggered ' + err) \n          })            \n        }\n\n        getFunc(result, 1) \n\n       /*\n          result.get(`https://3.basecampapi.com/${userId}/people.json?page=2`)\n          .done(function(peoplelist) {\n            console.log('People list is: ' + JSON.stringify(peoplelist))\n            var ids = [] \n            for (const person of peoplelist) {\n              ids.push(person.id)\n            }\n            updatePeopleState(ids)\n          })\n          .fail(function (err) {\n          });\n\n          result.get(`https://3.basecampapi.com/${userId}/people.json?page=3`)\n          .done(function(peoplelist) {\n            console.log('People list is: ' + JSON.stringify(peoplelist))\n            var ids = [] \n            for (const person of peoplelist) {\n              ids.push(person.id)\n            }\n            updatePeopleState(ids)\n          })\n          .fail(function (err) {\n          });\n\n          result.get(`https://3.basecampapi.com/${userId}/people.json?page=4`)\n          .done(function(peoplelist) {\n            console.log('People list is: ' + JSON.stringify(peoplelist))\n            var ids = [] \n            for (const person of peoplelist) {\n              ids.push(person.id)\n            }\n            updatePeopleState(ids)\n          })\n          .fail(function (err) {\n          });\n        */\n\n        result.get(`https://3.basecampapi.com/${userId}/projects.json`).done(function(projectslist) {\n          console.log('Project list is: ' + JSON.stringify(projectslist))\n          updateProjectState(JSON.stringify(projectslist))\n        })\n    \n     \n/*   \n      const config = {\n        method: 'get',\n        withCredentials: true,\n        url: `https://3.basecampapi.com/${userId}/people.json`,\n        headers: { 'Authorization' : `Bearer ${result.access_token}`, 'Content-Type' : 'application/json' }\n      }\n      const someFunc = async() => {\n          let res = await OAuth.get(`https://3.basecampapi.com/${userId}/people.json`, config) \n          alert(\"All People: \" + JSON.stringify(res));\n      }\n      someFunc()\n */\n      })\n    })\n\n    \n  }\n\n  render() { \n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          All People:\n          <div>\n            <Gallery images={this.state.peoplethumbnails} onClickThumbnail={onSelectThumbnail} />\n          </div>     \n        </div>\n        <div>\n          All Projects: \n        </div>\n      </header>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}